/**
En este desaf칤o vas a recibir un par치metro arraySecreto en la funci칩n solution. Debes retornar true si el primer elemento del arraySecreto es de tipo string y debes retornar false si es de cualquier otro tipo.

Input

solution(["Huevo", "Gallina", "Vaca"])
solution([1, "Gallina", "Vaca"])

Output

true
false
*/

/* export function solution(arraySecreto) {
  return typeof arraySecreto[0] === "string" ? true : false;
}

solution(["Huevo", "Gallina", "Vaca"]); */

/* const estudiantes = ["Maria", "Sergio", "Rosa", "Daniel"];

let saludar = (estudiante) => console.info(`Hola ${estudiante}`);

for (let i = 0; i < estudiantes.length; i++) {
  saludar(estudiantes[i]);
} */

/* const estudiantes = ["Maria", "Sergio", "Rosa", "Daniel"];

let saludar = (estudiante) => console.info(`Hola ${estudiante}`);

for (let estudiante of estudiantes) {
  saludar(estudiante);
} */

const estudiantes = ["Maria", "Sergio", "Rosa", "Daniel"];

let saludar = (estudiante) => console.info(`Hola ${estudiante}`);

while (estudiantes.length > 0) {
  console.log(estudiantes);
  let estudiante = estudiantes.shift();
  saludar(estudiante);
}

/**
En este desaf칤o tu funci칩n solution recibir치 3 par치metros:

estudiantes: un array de strings con varios nombres de estudiantes.
deathCount: un n칰mero entero.
nuevo: un string con el nombre de un nuevo estudiante (que no aparec칤a antes en el array).
Tu funci칩n debe retornar un array de elementos con las siguientes indicaciones:

Si el par치metro deathCount es igual a 0, debes retornar un array con los mismos elementos que ten칤a el array de estudiantes y agregando el elemento nuevo al final.

Si el par치metro deathCount es mayor a 0, debes retornar un array con los mismos elementos del array estudiantes pero eliminando la cantidad de estudiantes que indica el n칰mero deathCount y agregando el elemento nuevo al final.

游눠 Aclaraci칩n: NO debes eliminar TODOS los elementos del array original de estudiantes, sino eliminar la cantidad de estudiantes que indica el n칰mero deathCount.

Ejemplo 1:

El array estudiantes contiene los elementos "Nico" y "Zulle". El n칰mero deathCount es igual a 0. Y el nuevo estudiante es "Santi". Al deathCount ser igual a 0, "Nico" y "Zulle" se quedan. Y agregamos "Santi" al final.

// Input
solution(["Nico", "Zule"], 0, "Santi")

// Output
["Nico", "Zule", "Santi"]

Ejemplo 2:

El array estudiantes contiene los elementos "Juan". "Juanita" y "Daniela". El n칰mero deathCount es igual a 1. Y el nuevo estudiante es "Julian". Al deathCount ser igual a 1, el 칰ltimo elemento del array de estudiantes ("Daniela") se debe ir. Y agregamos "Julian" al final.

// Input
solution(["Juan", "Juanita", "Daniela"], 1, "Julian")

// Output
["Juan", "Juanita", "Julian"]

Ejemplo 3:

El array estudiantes contiene los elementos "Nath". "Luisa" y "Noru". El n칰mero deathCount es igual a 2. Y el nuevo estudiante es "Cami". Al deathCount ser igual a 2, los 칰ltimos 2 elementos del array de estudiantes ("Luisa" y "Noru") se deben ir. Y agregamos "Cami" al final.

// Input
solution(["Nath", "Luisa", "Noru"], 2, "Cami")

// Output
["Nath", "Cami"]
*/

/**
En este desaf칤o vas a recibir un objeto car como par치metro de la funci칩n solution.

Este objeto puede contener diferentes propiedades. Debes asegurarte de que tenga la propiedad licensePlate (la placa del auto). Si s칤 la tiene, devuelve el objeto original con la propiedad drivingLicense como true. Si no la tiene, devuelve el objeto original con la propiedad drivingLicense como false.

Input

// Prueba 1
solution({
  color: 'red',
  brand: 'Kia',
});

// Prueba 2
solution({
  color: 'gray',
  brand: 'Chevrolet',
  licensePlate: 'AAA111',
});

// Prueba 3
solution({ licensePlate: 'RGB255'  });

Output

// Prueba 1
{
  color: 'red',
  brand: 'Kia',
  drivingLicense: false,
}

// Prueba 2
{
  color: 'gray',
  brand: 'Chevrolet',
  licensePlate: 'AAA111',
  drivingLicense: true,
}

// Prueba 3
{
  licensePlate: 'RGB255',
  drivingLicense: true,
}
*/

// Imprimir el primer elemento del array
function imprimirPrimerElementoArray(arr) {
  console.log(arr[0]);
}

imprimirPrimerElementoArray(["hola", "mundo", "hello"]);

// Imprimir elemento por elemento del array con una funci칩n declarativa
function imprimirElementoPorElemento(arr) {
  for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
  }
}

imprimirElementoPorElemento(["hola", "mundo", "hello"]);

// Imprimir elemento por elemento del array con una funci칩n expresiva
const imprimirElementoPorElemento2 = (arr) => {
  for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
  }
};

imprimirElementoPorElemento2(["uno", "dos", "tres"]);

const obj1 = {
  nombre: "John",
  edad: 33,
  comidaFavorita: ["Pollo frito", "Pasta", "Pizza"],
};

function imprimirElementoPorElementoObjeto(obj1) {
  const arr = Object.values(obj1);
  for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
  }
}

imprimirElementoPorElementoObjeto(obj1);
